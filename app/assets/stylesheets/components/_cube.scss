@import './cube_keyframes';

$total-duration: 1400ms;
$swell-duration: 300ms;
$tail-duration: 0ms;
$swell-easing: cubic-bezier(0.45, 0, 0.55, 1);
$rotate-easing: cubic-bezier(0.85, 0, 0.15, 1); // cubic-bezier(0.45, 0, 0.55, 1);
$rotate-scale: 0.6 - 0.025;
#cube-container {
  position: relative;

  #postcard {
    transition: transform $swell-duration $swell-easing;
    transform: none;
    padding: 0;
  }
  .side-inner {
    transition: transform $swell-duration $swell-easing;
    transform: none;
  }

  .cube-bg {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    z-index: -2;

    &.disappearing {
      z-index: -1;
      animation: bg-disappearance forwards $total-duration;
      mix-blend-mode: difference;
    }
  }

  &.rotating {
    #postcard {
      background: black;
      transform: scale(1.05);
    }

    .side-inner {
      transform: scale($rotate-scale);
    }

    @each $side in ('front', 'back', 'left', 'right', 'top', 'bottom') {
      .side.#{$side} {
        animation: $side forwards #{$total-duration - $swell-duration - $tail-duration} $swell-duration $rotate-easing;
      }
    }

    .side {
      transition: background 0ms #{$swell-duration + 50ms};
    }
    // only dynamically define front side for swell effect
    .side.front { background-color: white; }
  }
}

#cube {
  background: black;
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 100%;

  .side {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: white;

    .side-inner {
      box-sizing: border-box;
      width: 100%;
      height: 100%;

      padding: 5%;
    }
  }


  .side.back { background-color: blue; }
  .side.left { background-color: green; }
  .side.right { background-color: orange; }
  .side.top { background-color: bisque; }
  .side.bottom { background-color: purple; }
  .side-inner {
    background-color: inherit;
  }

  .side.front { z-index: 10; }
  .side.front .side-inner { background: white; }

  .side.left { @extend .side-snakes; }
  .side.bottom { @extend .side-diamonds; }

  .side {
    background: black;
  }
}

@mixin cube-side($name, $color) {
  .side-#{$name} {
    background-color: $color;
    background-image: image-url('sides/#{$name}.png');
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;

    .side-inner {
      background: transparent !important;
    }
  }
}

@include cube-side('snakes', #c0b6fd);
@include cube-side('diamonds', #fd8d6f);

@keyframes bg-disappearance {
  0% {
    mix-blend-mode: initial;
  }

  20% {
    mix-blend-mode: hue;
    opacity: 1;
  }

  60% {
    mix-blend-mode: hue;
    opacity: 0.5;
  }

  80% {
    mix-blend-mode: hue;
    opacity: 0.5;
  }

  99% {
    opacity: 0;
  }

  100% {
    mix-blend-mode: initial;
    display: none;
    visibility: hidden;
  }
}
